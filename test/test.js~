var assert = require("assert")
var Stream = require("stream").Stream;
var mockery = require("mockery");

describe("froyo.core", function(){
	describe("#scoop", function(){
		before(function(done){
		var res = {
		'writeHead': function(statCode, headers){
			if (assert.notEqual(statCode, 404 || 200)){
                           done(new Error("status codes are all messed"))		    
			}
		},
		write: function(chunk){
		if (typeof chunk !== "string"){
		done(new Error("You didn't write a string")
		}       
		}
		}
		var req = {
		url: "/test/tr?90=1212"
		}
		var httpMock = {
			createServer: function(cb){
				      setTimeout(function(){
			              cb(req, res)
				      }, 800)
				      return {
					      listen: function(num){
						   if (assert.notEqual(num, "number")){done(new Error("port not a number")}   
						   }
				      }
		}
		mockery.enable()
		mockery.registerMock('http', httpMock)
		})
		it("should start an http server", function(){
			assert.equal(true, froyo.scoop())
		})
	})
	describe("#staticHandler", function(){
		it("should return a function", function(){
			var a = new Stream();
			a.writeHead = function(){}
			a.writable = true;
			a.write = function(c){
			assert.equal(c, "<!DOCTYPE html><html><body>Hi</body></html>")
			}
			a.end = function(){}
			var b = froyo.staticHandler("test/test.jade", "text/jade", {"test": "Hi"})
			b("", a)
		})
	})
})
